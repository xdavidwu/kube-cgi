stages:
  - test
  - package
  - deploy

default:
  image: alpine:edge

test:
  stage: test
  before_script:
    - apk add make bash go
  script:
    - make test

.ko:
  stage: package
  variables:
    KO_DOCKER_REPO: $CI_REGISTRY_IMAGE
    CGO_ENABLED: 0
  before_script:
    - echo https://dl-cdn.alpinelinux.org/alpine/edge/testing/ >> /etc/apk/repositories
    - apk add ko go
    - ko login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - ko build -B -t $CI_PIPELINE_ID $IMPORT_PATH

package:manager:
  extends: .ko
  variables:
    IMPORT_PATH: ./cmd/manager

package:dappy:
  extends: .ko
  variables:
    IMPORT_PATH: ./cmd/dappy

deploy:
  stage: deploy
  only: [main]
  before_script:
    - apk add kubectl gettext
    - kubectl config use-context aic/infra/agent:aic
  script:
    - envsubst < config/aic/kustomization.yaml.envsubst > config/aic/kustomization.yaml
    - kubectl kustomize config/aic/ --load-restrictor LoadRestrictionsNone | kubectl apply -f -
    - |
      kubectl create secret docker-registry gitlab-registry \
        --docker-server="$CI_REGISTRY" --docker-username="$CI_DEPLOY_USER" \
        --docker-password="$CI_DEPLOY_PASSWORD" --dry-run=client -o yaml \
        | kubectl -n kube-cgi-system apply -f -
